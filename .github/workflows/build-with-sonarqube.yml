name: Build and Analyze with SonarQube Self-Hosted

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build and Analyze Code with SonarQube
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Baixar o código do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o JDK necessário
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      # Passo 3: Configurar o cache para dependências Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Passo 4: Iniciar o SonarQube em um contêiner Docker
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            sonarqube:9.9-community
          # Aguardar o SonarQube inicializar
          for i in {1..60}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; then
              echo "SonarQube is up and running!"
              break
            fi
            echo "Waiting for SonarQube to start..."
            sleep 5
          done

      # Passo 5: Build e análise do código com Maven e SonarQube
      - name: Build and Analyze with SonarQube
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          SONAR_PASSWORD: ${{ secrets.SONAR_PASSWORD }}
        run: |
          mvn clean install sonar:sonar \
            -Dsonar.projectKey=avalanches \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_LOGIN \
            -Dsonar.password=$SONAR_PASSWORD

      # Passo 6: Parar o contêiner do SonarQube
      - name: Stop SonarQube
        if: always()
        run: docker stop sonarqube && docker rm sonarqube
